{"version":3,"file":"static/chunks/pages/index-3fdf9018fd28dd83.js","mappings":"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","sources":["webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/iterableToArray.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  UPLOAD_IMAGES_REQUEST,\r\n  REMOVE_IMAGE,\r\n  ADD_POST_REQUEST,\r\n} from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (!text || !text.trim()) {\r\n      return alert(\"게시글을 작성하세요.\");\r\n    }\r\n    const formData = new FormData();\r\n    imagePaths.forEach((p) => {\r\n      formData.append(\"image\", p);\r\n    });\r\n    formData.append(\"content\", text);\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n  }, [text, imagePaths]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log(\"images\", e.target.files);\r\n    const formData = new FormData();\r\n    [...e.target.files].forEach((f) => {\r\n      formData.append(\"image\", f);\r\n    });\r\n    dispatch({ type: UPLOAD_IMAGES_REQUEST, data: formData });\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback(\r\n    (index) => () => {\r\n      dispatch({ type: REMOVE_IMAGE, data: index });\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          multiple\r\n          hidden\r\n          ref={imageInput}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v, i) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img\r\n              src={v.replace(/\\/thumb\\//, \"/original/\")}\r\n              style={{ width: \"200px\" }}\r\n              alt={v}\r\n            />\r\n            <div>\r\n              <Button onClick={onRemoveImage(i)}>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\nimport wrapper from \"../store/configureStore\";\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } =\r\n    useSelector((state) => state.post);\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, loadPostsLoading]);\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req }) => {\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      store.dispatch({ type: LOAD_MY_INFO_REQUEST });\r\n      store.dispatch({ type: LOAD_POSTS_REQUEST });\r\n      store.dispatch(END);\r\n      await store.sagaTask.toPromise();\r\n    }\r\n);\r\nexport default Home;\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  "],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","useSelector","state","post","imagePaths","addPostDone","dispatch","useDispatch","useInput","text","onChangeText","setText","useEffect","onSubmit","useCallback","trim","alert","formData","FormData","forEach","p","append","type","ADD_POST_REQUEST","data","imageInput","useRef","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","f","UPLOAD_IMAGES_REQUEST","onRemoveImage","index","REMOVE_IMAGE","style","margin","encType","onFinish","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","map","v","i","display","src","replace","width","alt","mainPosts","hasMorePosts","loadPostsLoading","retweetError","me","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","AppLayout","PostCard","__NEXT_P","push"],"sourceRoot":""}