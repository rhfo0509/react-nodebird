{"version":3,"file":"629.js","mappings":"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","sources":["webpack://ch0/./components/CommentForm.js","webpack://ch0/./components/FollowButton.js","webpack://ch0/./components/PostCard.js","webpack://ch0/./components/PostCardContent.js","webpack://ch0/./components/ImagesZoom/styles.js","webpack://ch0/./components/ImagesZoom/index.js","webpack://ch0/./components/PostImages.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone, addCommentLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText(\"\");\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={addCommentLoading}\r\n        >\r\n          삐약\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n","import { Button } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\r\n\r\nconst FollowButton = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\r\n\r\n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\r\n  const onClickButton = useCallback(() => {\r\n    if (isFollowing) {\r\n      dispatch({ type: UNFOLLOW_REQUEST, data: post.User.id });\r\n    } else {\r\n      dispatch({ type: FOLLOW_REQUEST, data: post.User.id });\r\n    }\r\n  }, [isFollowing]);\r\n\r\n  // return문은 hooks보다 아래에 적도록 한다. 안 그러면 Rendered fewer hooks than expected 에러 발생\r\n  if (post.User.id === me.id) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Button onClick={onClickButton} loading={followLoading || unfollowLoading}>\r\n      {isFollowing ? \"언팔로우\" : \"팔로우\"}\r\n    </Button>\r\n  );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  HeartTwoTone,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport {\r\n  RETWEET_REQUEST,\r\n  REMOVE_POST_REQUEST,\r\n  LIKE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n} from \"../reducers/post\";\r\n\r\nmoment.locale(\"ko\");\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const id = me?.id;\r\n  const liked = post.Likers.find((v) => v.id === id);\r\n\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onRetweet = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    dispatch({ type: RETWEET_REQUEST, data: post.id });\r\n  }, [id]);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n\r\n    if (liked) {\r\n      dispatch({ type: UNLIKE_POST_REQUEST, data: post.id });\r\n    } else {\r\n      dispatch({ type: LIKE_POST_REQUEST, data: post.id });\r\n    }\r\n  }, [liked, id]);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({ type: REMOVE_POST_REQUEST, data: post.id });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && id === post.User.id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      loading={removePostLoading}\r\n                      onClick={onRemovePost}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}\r\n        title={\r\n          post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null\r\n        }\r\n      >\r\n        {post.Retweet && post.RetweetId ? (\r\n          <Card\r\n            cover={\r\n              post.Retweet.Images[0] && (\r\n                <PostImages images={post.Retweet.Images} />\r\n              )\r\n            }\r\n          >\r\n            <div style={{ float: \"right\" }}>\r\n              {moment(post.createdAt).format(\"YYYY.MM.DD\")}\r\n            </div>\r\n            <Card.Meta\r\n              avatar={\r\n                <Link href={`/user/${post.Retweet.User.id}`}>\r\n                  <a>\r\n                    <Avatar>{post.Retweet.User.nickname[0]}</Avatar>\r\n                  </a>\r\n                </Link>\r\n              }\r\n              title={post.Retweet.User.nickname}\r\n              description={<PostCardContent postData={post.Retweet.content} />}\r\n            />\r\n          </Card>\r\n        ) : (\r\n          <>\r\n            <div style={{ float: \"right\" }}>\r\n              {moment(post.createdAt).format(\"YYYY.MM.DD\")}\r\n            </div>\r\n            <Card.Meta\r\n              avatar={\r\n                <Link href={`/user/${post.User.id}`}>\r\n                  <a>\r\n                    <Avatar>{post.User.nickname[0]}</Avatar>\r\n                  </a>\r\n                </Link>\r\n              }\r\n              title={post.User.nickname}\r\n              description={<PostCardContent postData={post.content} />}\r\n            />\r\n          </>\r\n        )}\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={\r\n                    <Link href={`/user/${item.User.id}`}>\r\n                      <a>\r\n                        <Avatar>{item.User.nickname[0]}</Avatar>\r\n                      </a>\r\n                    </Link>\r\n                  }\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// post 내의 속성들도 타입 체크를 하기 위해서는 -> shape\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    createdAt: PropTypes.string,\r\n    Likers: PropTypes.arrayOf(PropTypes.object),\r\n    RetweetId: PropTypes.number,\r\n    Retweet: PropTypes.objectOf(PropTypes.any),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n","import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostCardContent = ({ postData }) => {\r\n  return (\r\n    <div>\r\n      {postData.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n        if (v.match(/(#[^\\s#]+)/)) {\r\n          return (\r\n            <Link key={i} href={`/hashtag/${v.slice(1)}`}>\r\n              <a>{v}</a>\r\n            </Link>\r\n          );\r\n        }\r\n        return v;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCardContent.propTypes = {\r\n  postData: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostCardContent;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 44px;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;\r\n\r\n  & h1 {\r\n    margin: 0;\r\n    font-size: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n`;\r\n\r\nexport const CloseBtn = styled(CloseOutlined)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 15px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  padding: 32px;\r\n  text-align: center;\r\n\r\n  & img {\r\n    margin: 0 auto;\r\n    max-height: 750px;\r\n  }\r\n`;\r\n\r\nexport const Indicator = styled.div`\r\n  text-align: center;\r\n\r\n  & > div {\r\n    width: 75px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    border-radius: 15px;\r\n    background: #313131;\r\n    display: inline-block;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const Global = createGlobalStyle`\r\n  .slick-slide {\r\n    display: inline-block;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slick from \"react-slick\";\r\n\r\nimport {\r\n  Overlay,\r\n  Global,\r\n  Header,\r\n  CloseBtn,\r\n  SlickWrapper,\r\n  ImgWrapper,\r\n  Indicator,\r\n} from \"./styles\";\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n      <Global />\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn onClick={onClose}>X</CloseBtn>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <Slick\r\n          initialSlide={0}\r\n          afterChange={(slide) => setCurrentSlide(slide)}\r\n          infinite\r\n          arrows={false}\r\n          slidesToShow={1}\r\n          slidesToScroll={1}\r\n        >\r\n          {images.map((v) => (\r\n            <ImgWrapper key={v.src}>\r\n              <img\r\n                src={`${v.src.replace(/\\/thumb\\//, \"/original/\")}`}\r\n                alt={v.src}\r\n              />\r\n            </ImgWrapper>\r\n          ))}\r\n        </Slick>\r\n        <Indicator>\r\n          <div>\r\n            {currentSlide + 1}/{images.length}\r\n          </div>\r\n        </Indicator>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nimport ImagesZoom from \"./ImagesZoom\";\r\n\r\nconst PostImages = ({ images }) => {\r\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n  const onClose = useCallback(() => {\r\n    setShowImagesZoom(false);\r\n  }, []);\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img\r\n          role=\"presentation\"\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <>\r\n        <img\r\n          role=\"presentation\"\r\n          style={{ width: \"50%\", display: \"inline-block\" }}\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        <img\r\n          role=\"presentation\"\r\n          style={{ width: \"50%\", display: \"inline-block\" }}\r\n          src={images[1].src}\r\n          alt={images[1].src}\r\n          onClick={onZoom}\r\n        />\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          role=\"presentation\"\r\n          width=\"50%\"\r\n          src={images[0].src}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        <div\r\n          role=\"presentation\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"50%\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"middle\",\r\n          }}\r\n          onClick={onZoom}\r\n        >\r\n          <PlusOutlined />\r\n          <br />\r\n          {images.length - 1}\r\n          개의 사진 더보기\r\n        </div>\r\n      </div>\r\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n    </>\r\n  );\r\n};\r\n\r\nPostImages.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default PostImages;\r\n"],"names":["React","useCallback","useEffect","Button","Form","Input","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","addCommentLoading","dispatch","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","zIndex","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","followLoading","unfollowLoading","isFollowing","Followings","find","v","User","onClickButton","useState","Link","Avatar","Card","Comment","List","Popover","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","moment","PostImages","PostCardContent","RETWEET_REQUEST","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","locale","PostCard","removePostLoading","liked","Likers","commentFormOpened","setCommentFormOpened","onRetweet","alert","onToggleLike","onToggleComment","prev","onRemovePost","marginBottom","Images","RetweetId","nickname","Retweet","float","createdAt","format","Comments","length","item","postData","split","map","i","match","slice","styled","createGlobalStyle","CloseOutlined","Overlay","div","Header","header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","Global","Slick","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","src","replace","PlusOutlined","showImagesZoom","setShowImagesZoom","onZoom","width","display","textAlign","verticalAlign"],"sourceRoot":""}