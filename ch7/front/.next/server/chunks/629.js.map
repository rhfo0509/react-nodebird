{"version":3,"file":"629.js","mappings":"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","sources":["webpack://ch0/./components/CommentForm.js","webpack://ch0/./components/FollowButton.js","webpack://ch0/./components/PostCard.js","webpack://ch0/./components/PostCardContent.js","webpack://ch0/./components/ImagesZoom/styles.js","webpack://ch0/./components/ImagesZoom/index.js","webpack://ch0/./components/PostImages.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\n\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone, addCommentLoading } = useSelector(\n    (state) => state.post\n  );\n  const dispatch = useDispatch();\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea\n          value={commentText}\n          onChange={onChangeCommentText}\n          rows={4}\n        />\n        <Button\n          style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={addCommentLoading}\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n","import { Button } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\n\nconst FollowButton = ({ post }) => {\n  const dispatch = useDispatch();\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n\n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({ type: UNFOLLOW_REQUEST, data: post.User.id });\n    } else {\n      dispatch({ type: FOLLOW_REQUEST, data: post.User.id });\n    }\n  }, [isFollowing]);\n\n  // return문은 hooks보다 아래에 적도록 한다. 안 그러면 Rendered fewer hooks than expected 에러 발생\n  if (post.User.id === me.id) {\n    return null;\n  }\n\n  return (\n    <Button onClick={onClickButton} loading={followLoading || unfollowLoading}>\n      {isFollowing ? \"언팔로우\" : \"팔로우\"}\n    </Button>\n  );\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default FollowButton;\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport {\n  EllipsisOutlined,\n  HeartOutlined,\n  HeartTwoTone,\n  MessageOutlined,\n  RetweetOutlined,\n} from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport FollowButton from \"./FollowButton\";\nimport {\n  RETWEET_REQUEST,\n  REMOVE_POST_REQUEST,\n  LIKE_POST_REQUEST,\n  UNLIKE_POST_REQUEST,\n} from \"../reducers/post\";\n\nmoment.locale(\"ko\");\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { removePostLoading } = useSelector((state) => state.post);\n  const id = me?.id;\n  const liked = post.Likers.find((v) => v.id === id);\n\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  const onRetweet = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    dispatch({ type: RETWEET_REQUEST, data: post.id });\n  }, [id]);\n\n  const onToggleLike = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    if (liked) {\n      dispatch({ type: UNLIKE_POST_REQUEST, data: post.id });\n    } else {\n      dispatch({ type: LIKE_POST_REQUEST, data: post.id });\n    }\n  }, [liked, id]);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    dispatch({ type: REMOVE_POST_REQUEST, data: post.id });\n  }, []);\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && id === post.User.id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button\n                      type=\"danger\"\n                      loading={removePostLoading}\n                      onClick={onRemovePost}\n                    >\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={id && <FollowButton post={post} />}\n        title={\n          post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null\n        }\n      >\n        {post.Retweet && post.RetweetId ? (\n          <Card\n            cover={\n              post.Retweet.Images[0] && (\n                <PostImages images={post.Retweet.Images} />\n              )\n            }\n          >\n            <div style={{ float: \"right\" }}>\n              {moment(post.createdAt).format(\"YYYY.MM.DD\")}\n            </div>\n            <Card.Meta\n              avatar={\n                <Link href={`/user/${post.Retweet.User.id}`}>\n                  <a>\n                    <Avatar>{post.Retweet.User.nickname[0]}</Avatar>\n                  </a>\n                </Link>\n              }\n              title={post.Retweet.User.nickname}\n              description={<PostCardContent postData={post.Retweet.content} />}\n            />\n          </Card>\n        ) : (\n          <>\n            <div style={{ float: \"right\" }}>\n              {moment(post.createdAt).format(\"YYYY.MM.DD\")}\n            </div>\n            <Card.Meta\n              avatar={\n                <Link href={`/user/${post.User.id}`}>\n                  <a>\n                    <Avatar>{post.User.nickname[0]}</Avatar>\n                  </a>\n                </Link>\n              }\n              title={post.User.nickname}\n              description={<PostCardContent postData={post.content} />}\n            />\n          </>\n        )}\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={\n                    <Link href={`/user/${item.User.id}`}>\n                      <a>\n                        <Avatar>{item.User.nickname[0]}</Avatar>\n                      </a>\n                    </Link>\n                  }\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\n// post 내의 속성들도 타입 체크를 하기 위해서는 -> shape\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    createdAt: PropTypes.string,\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;\n","import React from \"react\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\n\nconst PostCardContent = ({ postData }) => {\n  return (\n    <div>\n      {postData.split(/(#[^\\s#]+)/g).map((v, i) => {\n        if (v.match(/(#[^\\s#]+)/)) {\n          return (\n            <Link key={i} href={`/hashtag/${v.slice(1)}`}>\n              <a>{v}</a>\n            </Link>\n          );\n        }\n        return v;\n      })}\n    </div>\n  );\n};\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n};\n\nexport default PostCardContent;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const Header = styled.header`\n  height: 44px;\n  background: white;\n  position: relative;\n  padding: 0;\n  text-align: center;\n\n  & h1 {\n    margin: 0;\n    font-size: 17px;\n    color: #333;\n    line-height: 44px;\n  }\n`;\n\nexport const CloseBtn = styled(CloseOutlined)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 15px;\n  line-height: 14px;\n  cursor: pointer;\n`;\n\nexport const SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background: #090909;\n`;\n\nexport const ImgWrapper = styled.div`\n  padding: 32px;\n  text-align: center;\n\n  & img {\n    margin: 0 auto;\n    max-height: 750px;\n  }\n`;\n\nexport const Indicator = styled.div`\n  text-align: center;\n\n  & > div {\n    width: 75px;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 15px;\n    background: #313131;\n    display: inline-block;\n    text-align: center;\n    color: white;\n    font-size: 15px;\n  }\n`;\n\nexport const Global = createGlobalStyle`\n  .slick-slide {\n    display: inline-block;\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slick from \"react-slick\";\n\nimport {\n  Overlay,\n  Global,\n  Header,\n  CloseBtn,\n  SlickWrapper,\n  ImgWrapper,\n  Indicator,\n} from \"./styles\";\n\nconst ImagesZoom = ({ images, onClose }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  return (\n    <Overlay>\n      <Global />\n      <Header>\n        <h1>상세 이미지</h1>\n        <CloseBtn onClick={onClose}>X</CloseBtn>\n      </Header>\n      <SlickWrapper>\n        <Slick\n          initialSlide={0}\n          afterChange={(slide) => setCurrentSlide(slide)}\n          infinite\n          arrows={false}\n          slidesToShow={1}\n          slidesToScroll={1}\n        >\n          {images.map((v) => (\n            <ImgWrapper key={v.src}>\n              <img\n                src={`${v.src.replace(/\\/thumb\\//, \"/original/\")}`}\n                alt={v.src}\n              />\n            </ImgWrapper>\n          ))}\n        </Slick>\n        <Indicator>\n          <div>\n            {currentSlide + 1}/{images.length}\n          </div>\n        </Indicator>\n      </SlickWrapper>\n    </Overlay>\n  );\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ImagesZoom;\n","import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport ImagesZoom from \"./ImagesZoom\";\n\nconst PostImages = ({ images }) => {\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\n\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n  if (images.length === 1) {\n    return (\n      <>\n        <img\n          role=\"presentation\"\n          src={images[0].src}\n          alt={images[0].src}\n          onClick={onZoom}\n        />\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n      </>\n    );\n  }\n  if (images.length === 2) {\n    return (\n      <>\n        <img\n          role=\"presentation\"\n          style={{ width: \"50%\", display: \"inline-block\" }}\n          src={images[0].src}\n          alt={images[0].src}\n          onClick={onZoom}\n        />\n        <img\n          role=\"presentation\"\n          style={{ width: \"50%\", display: \"inline-block\" }}\n          src={images[1].src}\n          alt={images[1].src}\n          onClick={onZoom}\n        />\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n      </>\n    );\n  }\n  return (\n    <>\n      <div>\n        <img\n          role=\"presentation\"\n          width=\"50%\"\n          src={images[0].src}\n          alt={images[0].src}\n          onClick={onZoom}\n        />\n        <div\n          role=\"presentation\"\n          style={{\n            display: \"inline-block\",\n            width: \"50%\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n          }}\n          onClick={onZoom}\n        >\n          <PlusOutlined />\n          <br />\n          {images.length - 1}\n          개의 사진 더보기\n        </div>\n      </div>\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n    </>\n  );\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default PostImages;\n"],"names":["React","useCallback","useEffect","Button","Form","Input","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","addCommentLoading","dispatch","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","zIndex","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","followLoading","unfollowLoading","isFollowing","Followings","find","v","User","onClickButton","useState","Link","Avatar","Card","Comment","List","Popover","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","moment","PostImages","PostCardContent","RETWEET_REQUEST","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","locale","PostCard","removePostLoading","liked","Likers","commentFormOpened","setCommentFormOpened","onRetweet","alert","onToggleLike","onToggleComment","prev","onRemovePost","marginBottom","Images","RetweetId","nickname","Retweet","float","createdAt","format","Comments","length","item","postData","split","map","i","match","slice","styled","createGlobalStyle","CloseOutlined","Overlay","div","Header","header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","Global","Slick","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","src","replace","PlusOutlined","showImagesZoom","setShowImagesZoom","onZoom","width","display","textAlign","verticalAlign"],"sourceRoot":""}